# settings-> security-> secrets-> secrets and variable-> add new secret.
# settings-> actions-> general-> Workflow permissions-> Allow read and write permission

name: Main
on: push
jobs:

  version:
    name: Create version number
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - uses: actions/checkout@v1
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.GitVersion_FullSemVer  }} > version.txt
      - name: Set version output
        id: step1
        run: echo "test=${{ env.GitVersion_FullSemVer }}" >> $GITHUB_OUTPUT
      - name: Upload version.txt as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: version-artifact
          path: version.txt
        if: success()
      - name: Handle error
        if: failure()
        run: |
          echo "Workflow failed: ${{ job.status }}"




  Setup:
    name: Setup
    needs: version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
        name: Get latest commit

      - uses: actions/setup-java@v1
        name: Set up JDK 16
        with:
          java-version: '16.x'

      - uses: subosito/flutter-action@v1
        name: Install Flutter
        with:
          channel: 'beta'
      - run: flutter pub get
        name: Get dependencies

      - name: Echo
        run: |
          echo "GITHUB_TOKEN ${{ secrets.GITHUB_TOKEN }}"
          echo "Token ${{ secrets.TOKEN }}"
          echo "SHA ${{ github.sha }}"
          echo "Ref ${{ github.ref }}"
          echo "RUN ${{ github.run_number }}"
          echo "RUN ${{ needs.version.outputs.output1 }}"

      - run: flutter build apk
        name: Build APK

      - uses: actions/upload-artifact@v2
        name: Upload APK
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk
          upload_url: ${{ steps.create_release.outputs.upload_url }} #4 This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: build/app/outputs/apk/release/app-release.apk # 2
          asset_name: app-release.apk
          asset_content_type: application/zip

      - uses: actions/create-release@v1
        name: Create a Release in GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          artifacts: ${{ needs.setup.outputs.output1 }}
          token: ${{ secrets.TOKEN }}
          tag_name: ${{ needs.version.outputs.output1 }}
          tag: ${{ needs.version.outputs.output1 }}
          commit: ${{ github.sha }}
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: build/app/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/zip