name: Minimal Android CI Workflow

on: push

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

  apk:
    name: Generate APK
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup JDK
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: PUB get
        run: flutter pub get

      - name : Build APK
        run: flutter build apk

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: apk
          path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Release APK
    needs: apk
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from build
        uses: actions/download-artifact@v1
        with:
          name: apk
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}

      - name: Upload Release APK
        id: upload_release_asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: MensaApp.apk
          asset_content_type: application/zip


#name: Main
#on: push
#jobs:
#  my-job:
#    runs-on: ubuntu-latest
#    steps:
#      - name: my-step
#        run: echo "Hello World!"
#
#  version:
#    needs: my-job
#    name: Create version number
#    runs-on: ubuntu-latest
#    outputs:
#      output1: ${{ steps.step1.outputs.test }}
#    steps:
#      - uses: actions/checkout@v1
#      - name: Install GitVersion
#        uses: gittools/actions/gitversion/setup@v0.9.7
#        with:
#          versionSpec: "5.x"
#
#      - name: gitversion
#        uses: gittools/actions/gitversion/execute@v0.9.7
#
#      - name: Create version.txt with nuGetVersion
#        run: echo ${{ steps.gitversion.outputs.GitVersion_FullSemVer  }} > version.txt
#
#      - name: Set version output
#        id: step1
#        run: echo "test=${{ env.GitVersion_FullSemVer }}" >> $GITHUB_OUTPUT
#
#      - name: Upload version.txt as an artifact
#        uses: actions/upload-artifact@v2
#        with:
#          name: version-artifact
#          path: version.txt
#        if: success()
#      - name: Handle error
#        if: failure()
#        run: |
#          echo "Workflow failed: ${{ job.status }}"
#
#
#  release-apk:
#    name: Release APK
#    needs: version
#    runs-on: ubuntu-latest
#    steps:
#
#      - uses: actions/checkout@v1
#      - uses: actions/setup-java@v1
#        with:
#          java-version: '12.x'
#
#      - uses: subosito/flutter-action@v1
#        with:
#          channel: 'beta'
#      - run: flutter pub get
#      - run: flutter build apk
#
#      - uses: actions/upload-artifact@v1
#        with:
#          name: release-apk
#          path: build/app/outputs/apk/release/app-release.apk
#
#      - name: echo
#        run: |
#          echo "GITHUB_TOKEN ${{ secrets.GITHUB_TOKEN }}"
#          echo "Token ${{ secrets.TOKEN }}"
#          echo "SHA ${{ github.sha }}"
#          echo "Ref ${{ github.ref }}"
#          echo "RUN ${{ github.run_number }}"
#
#      - uses: actions/upload-artifact@v2
#        with:
#          name: release-apk
#          path: build/app/outputs/flutter-apk/app-release.apk
#
#      - name: Create a Release in GitHub
#        uses: actions/upload-artifact@v1
#        with:
#          artifacts: "build/app/outputs/flutter-apk/app-release.apk"
#          token: ${{ secrets.TOKEN }}
#          tag: ${{ needs.version.outputs.output1 }}
#          commit: ${{ github.sha }}
#
#
#
##
##      - name: Download APK from build
##        uses: actions/download-artifact@v1
##        with:
##          name: release-apk
##          path: build/app/outputs/apk/release/app-release.apk
##
##      - name: Create Release
##        id: create_release
##        uses: actions/create-release@v1
##        env:
##          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
##        with:
##          tag_name: ${{ github.ref }}
##          release_name: Release ${{ github.ref }}
##
##      - name: Upload Release APK
##        id: upload_release_asset
##        uses: actions/upload-release-asset@v1.0.1
##        env:
##          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
##        with:
##          upload_url: ${{ steps.create_release.outputs.upload_url }}
##          asset_path: apk/app-debug.apk
##          asset_name: MensaApp.apk
##          asset_content_type: application/zip
