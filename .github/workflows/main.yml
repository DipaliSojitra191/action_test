name: Main
on: push
jobs:

  version:
    name: Create version number
    runs-on: ubuntu-latest
    outputs:
      output1: ${{ steps.step1.outputs.test }}
    steps:
      - uses: actions/checkout@v1
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.9.7
        with:
          versionSpec: "5.x"
      - name: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
      - name: Create version.txt with nuGetVersion
        run: echo ${{ steps.gitversion.outputs.GitVersion_FullSemVer  }} > version.txt
      - name: Set version output
        id: step1
        run: echo "test=${{ env.GitVersion_FullSemVer }}" >> $GITHUB_OUTPUT
      - name: Upload version.txt as an artifact
        uses: actions/upload-artifact@v2
        with:
          name: version-artifact
          path: version.txt
        if: success()
      - name: Handle error
        if: failure()
        run: |
          echo "Workflow failed: ${{ job.status }}"
    
    
    
    
    
    

  build:
    name: Build APK and Create release
    needs: version
    runs-on: ubuntu-latest
    steps:
      - env:
          OUTPUT1: ${{needs.version.outputs.output1}}
        run: echo "$OUTPUT1"
      - uses: actions/checkout@v1
      - name: Download version.txt artifact
        uses: actions/download-artifact@v2
        with:
          name: version-artifact
          path: downloaded
      - name: Print version.txt content in build job
        run: cat downloaded/version.txt
      - name: Update version in YAML
        run: |
          current_version=$(grep -oP 'version: \K[0-9]+\.[0-9]+\.[0-9]+\+[0-9]+' pubspec.yaml)
          IFS='+' read -ra version_parts <<< "$current_version"
          new_version="${version_parts[0]}+$((${version_parts[1]}+1))"
          sed -i "s/version: $current_version/version: ${{ needs.version.outputs.output1 }}/g" pubspec.yaml
      - name: Print pubspec.yaml
        run: cat pubspec.yaml
      - uses: actions/setup-java@v1
        with:
          java-version: '16.x'
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.7.0"
          channel: 'stable'

      - run: flutter pub get
      - run: flutter build apk --release

      - uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

      - name: Create a Release in GitHub
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/*.apk"
          token: ${{ secrets.TOKEN_GITHUB }}
          tag: ${{ needs.version.outputs.output1 }}
          commit: ${{ github.sha }}

  release-apk:
    name: Release APK
    needs: version
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '12.x'

      - uses: subosito/flutter-action@v1
        with:
          channel: 'beta'
      - run: flutter pub get
      - run: flutter build apk

      - uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: build/app/outputs/apk/release/app-release.apk

      - name: echo
        run: |
          echo "GITHUB_TOKEN ${{ secrets.GITHUB_TOKEN }}"
          echo "Token ${{ secrets.TOKEN }}"
          echo "SHA ${{ github.sha }}"
          echo "Ref ${{ github.ref }}"
          echo "RUN ${{ github.run_number }}"

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: build/app/outputs/apk/release/*.apk
          tag: ${{ needs.version.outputs.output1 }}
